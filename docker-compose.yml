# Copyright (c) 2020 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

version: '3.6'

services:
  ## Define telegraf service
  ia_telegraf:
    depends_on:
      - ia_common
    build:
      context: $PWD/../Telegraf
      dockerfile: $PWD/../Telegraf/Dockerfile
      args:
        EIS_VERSION: ${EIS_VERSION}
        EIS_UID: ${EIS_UID}
        DOCKER_REGISTRY: ${DOCKER_REGISTRY}
        TELEGRAF_SOURCE_TAG: ${TELEGRAF_SOURCE_TAG}
        TELEGRAF_GO_VERSION: ${TELEGRAF_GO_VERSION}
    container_name: ia_telegraf
    hostname: ia_telegraf
    network_mode: host
    image: ${DOCKER_REGISTRY}ia_telegraf:${EIS_VERSION}
    restart: unless-stopped
    ipc: "none"
    read_only: true
    environment:
      AppName: "Telegraf"
      CertType: "pem,zmq"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${eis_no_proxy},${ETCD_HOST}
      NO_PROXY: ${eis_no_proxy},${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
      MQTT_BROKER_HOST: '127.0.0.1'
      INFLUX_SERVER: '127.0.0.1'
      INFLUXDB_PORT: $INFLUXDB_PORT
      ETCD_PREFIX: ${ETCD_PREFIX}
    user: ${EIS_UID}
    volumes:
      - "vol_temp_telegraf:/tmp/"
      - "vol_eis_socket:${SOCKET_DIR}"
    secrets:
      - ca_etcd
      - etcd_Telegraf_cert
      - etcd_Telegraf_key

volumes:
  vol_temp_telegraf:
    driver: local
    driver_opts:
      type: tmpfs
      o: "size=5K"
      device: tmpfs

secrets:
  etcd_Telegraf_cert:
    file: provision/Certificates/Telegraf/Telegraf_client_certificate.pem
  etcd_Telegraf_key:
    file: provision/Certificates/Telegraf/Telegraf_client_key.pem
